apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ .Values.database.name }}-pvc
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.database.storage.size }}
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.database.name }}
  labels:
    app: {{ .Values.database.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.database.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.database.name }}
    spec:
      containers:
      - name: {{ .Values.database.name }}
        image: {{ .Values.database.image.repository }}:{{ .Values.database.image.tag }}
        imagePullPolicy: {{ .Values.database.image.pullPolicy }}
        ports:
        - containerPort: 5432
        env:
        {{- if .Values.keyVault.enabled }}
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: database-creds
              key: username
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: database-creds
              key: password
        {{- else }}
        - name: POSTGRES_USER
          value: "dbuser"
        - name: POSTGRES_PASSWORD
          value: "dbpassword"
        {{- end }}
        - name: POSTGRES_DB
          value: "microservices"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
      volumes:
      - name: postgres-data
        persistentVolumeClaim:
          claimName: {{ .Values.database.name }}-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.database.name }}
spec:
  type: {{ .Values.database.service.type }}
  ports:
  - port: {{ .Values.database.service.port }}
    targetPort: {{ .Values.database.service.targetPort }}
  selector:
    app: {{ .Values.database.name }} 