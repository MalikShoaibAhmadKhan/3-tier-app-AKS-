apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.serviceA.name }}
  labels:
    app: {{ .Values.serviceA.name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ .Values.serviceA.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.serviceA.name }}
    spec:
      initContainers:
      - name: wait-for-postgres
        image: postgres:13
        command: ['sh', '-c', 'until pg_isready -h postgres -p 5432; do echo waiting for postgres; sleep 2; done;']
      containers:
      - name: {{ .Values.serviceA.name }}
        image: {{ .Values.serviceA.image.repository }}:{{ .Values.serviceA.image.tag }}
        imagePullPolicy: {{ .Values.serviceA.image.pullPolicy }}
        ports:
        - containerPort: 3001
        env:
        - name: POSTGRES_HOST
          value: postgres
        - name: POSTGRES_PORT
          value: "5432"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-db-secret
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-db-secret
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          value: "microservices"
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.serviceA.name }}
spec:
  type: {{ .Values.serviceA.service.type }}
  ports:
  - port: {{ .Values.serviceA.service.port }}
    targetPort: {{ .Values.serviceA.service.targetPort }}
  selector:
    app: {{ .Values.serviceA.name }}
