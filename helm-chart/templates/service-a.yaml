apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.serviceA.name }}
  labels:
    app: {{ .Values.serviceA.name }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ .Values.serviceA.name }}
  template:
    metadata:
      labels:
        app: {{ .Values.serviceA.name }}
    spec:
      containers:
      - name: {{ .Values.serviceA.name }}
        image: {{ .Values.serviceA.image.repository }}:{{ .Values.serviceA.image.tag }}
        imagePullPolicy: {{ .Values.serviceA.image.pullPolicy }}
        ports:
        - containerPort: 3001
        env:
        - name: DB_HOST
          value: {{ .Values.database.name }}
        - name: DB_PORT
          value: "{{ .Values.database.service.port }}"
        {{- if .Values.keyVault.enabled }}
        volumeMounts:
        - name: secrets-store-inline
          mountPath: "/mnt/secrets-store"
          readOnly: true
        - name: db-creds
          mountPath: "/etc/db-creds"
          readOnly: true
      volumes:
      - name: secrets-store-inline
        csi:
          driver: secrets-store.csi.k8s.io
          readOnly: true
          volumeAttributes:
            secretProviderClass: {{ .Values.keyVault.secretProviderClass }}
      - name: db-creds
        secret:
          secretName: database-creds
        {{- end }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Values.serviceA.name }}
spec:
  type: {{ .Values.serviceA.service.type }}
  ports:
  - port: {{ .Values.serviceA.service.port }}
    targetPort: {{ .Values.serviceA.service.targetPort }}
  selector:
    app: {{ .Values.serviceA.name }} 